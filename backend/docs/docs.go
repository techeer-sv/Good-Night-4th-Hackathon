// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/seats": {
            "get": {
                "description": "Get all seats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get all seats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Seat"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a seat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a seat",
                "parameters": [
                    {
                        "description": "Seat",
                        "name": "seat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SeatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SeatRequest"
                        }
                    }
                }
            }
        },
        "/seats/buy": {
            "post": {
                "description": "Buy a seat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Buy a seat",
                "parameters": [
                    {
                        "description": "Reservation",
                        "name": "seat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReservationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ReservationRequest"
                        }
                    }
                }
            }
        },
        "/seats/cancel": {
            "delete": {
                "description": "Cancel a reservation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Cancel a reservation",
                "parameters": [
                    {
                        "description": "Reservation",
                        "name": "seat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReservationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ReservationRequest"
                        }
                    }
                }
            }
        },
        "/seats/reserve": {
            "post": {
                "description": "Reserve a seat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Reserve a seat",
                "parameters": [
                    {
                        "description": "Seat",
                        "name": "seat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SeatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SeatRequest"
                        }
                    }
                }
            }
        },
        "/seats/unreserve": {
            "delete": {
                "description": "Unreserve a seat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Unreserve a seat",
                "parameters": [
                    {
                        "description": "Seat",
                        "name": "seat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SeatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SeatRequest"
                        }
                    }
                }
            }
        },
        "/seats/{id}": {
            "get": {
                "description": "Get a seat by number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a seat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Seat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Seat"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a seat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a seat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Seat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Seat"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ReservationRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "fname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lname": {
                    "type": "string"
                }
            }
        },
        "models.Seat": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_available": {
                    "type": "boolean"
                },
                "number": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.SeatRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "number": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
