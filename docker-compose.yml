
services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - tickettock

  redis:
    build: ./redis
    container_name: redis
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: 
      sh -c 'exec redis-server /usr/local/etc/redis/redis.conf --requirepass "${REDIS_PASSWORD}"'
    ports:
      - "${REDIS_EXTERNAL_PORT}:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - tickettock

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - RUST_LOG=${RUST_LOG}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - APP_PORT=${APP_PORT}
      - ADMIN_RESET_TOKEN=${ADMIN_RESET_TOKEN}
    volumes:
      - backend-data:/app/data
    depends_on:
      - postgres
      - redis
    ports:
      - "${BACKEND_EXTERNAL_PORT}:${APP_PORT}"
    restart: unless-stopped
    networks:
      - tickettock

  gateway:
    build: ./openresty
    container_name: gateway
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - FCFS_REDIS_PREFIX=fcfs
      - FCFS_USER_TTL=600
    depends_on:
      - backend
      - redis
    ports:
      - "${GATEWAY_EXTERNAL_PORT}:80"
    restart: unless-stopped
    networks:
      - tickettock

volumes:
  postgres-data:
  redis-data:
  backend-data:

networks:
  tickettock:
    driver: bridge